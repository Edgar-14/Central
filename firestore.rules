rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth.token.role == 'admin' || request.auth.token.role == 'superadmin';
    }

    match /drivers/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      // El repartidor solo puede actualizar su información personal y de vehículo.
      // Las actualizaciones críticas (status, wallet) son manejadas por el backend.
      allow update: if (request.auth.uid == userId && request.resource.data.keys().hasAll(['personalInfo', 'vehicleInfo'])) || isAdmin();
      allow delete: if isAdmin(); // Solo un admin puede borrar registros.

      match /transactions/{transactionId} {
        allow read: if request.auth.uid == userId || isAdmin();
        allow write: if false; // Prohibida la escritura directa.
      }
    }

    match /admins/{adminId} {
        allow read: if request.auth.uid == adminId;
        allow write: if request.auth.token.role == 'superadmin';
    }
  }
}