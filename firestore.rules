rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin roles
    function isAdmin() {
      return request.auth.token.role == 'admin' || request.auth.token.role == 'superadmin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Rules for the 'drivers' collection
    match /drivers/{driverEmail} {
      // Admins can do anything
      allow read, write: if isAdmin();
      
      // A user can create their own document during registration
      allow create: if isOwner(request.resource.data.uid);

      // An authenticated user can read their own document
      allow get: if request.auth.token.email == driverEmail;
      
      // A user can update their own document only during application submission
      allow update: if request.auth.token.email == driverEmail && request.resource.data.applicationStatus == 'pending_review';

      // Rules for the 'transactions' subcollection
      match /transactions/{transactionId} {
        // Admins can read any transaction
        allow read: if isAdmin();
        // A user can read their own transactions
        allow get: if get(/databases/$(database)/documents/drivers/$(driverEmail)).data.uid == request.auth.uid;
        // Nobody can write directly to transactions, it's handled by backend functions
        allow write: if false;
      }
    }

    // Rules for operational settings
    match /operationalSettings/global {
      // Admins can read and write settings
      allow read, write: if isAdmin();
      // Drivers can read the settings to see active incentives
      allow get: if request.auth.token.role == 'driver';
    }
  }
}
